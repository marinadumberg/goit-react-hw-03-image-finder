{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Loader/Loader.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/imageApi.js","components/Loader/Loader.js","components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/App/App.js","index.js","components/SearchBar/SearchBar.module.css","components/App/App.module.css"],"names":["module","exports","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","LoaderSpiner","className","s","Loader","type","color","height","width","SearchBar","state","imageName","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","Searchbar","SearchForm","this","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","placeholder","Component","ImageGalleryItem","webformatURL","tags","openModal","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","id","largeImageURL","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","console","log","target","window","addEventListener","removeEventListener","image","CreatePortal","overlay","modal","children","App","modalIsOpen","selectedImage","status","resetState","handleFormSubmit","closeModal","onLoadMore","prevState","prevProps","data","hits","pictures","catch","scrollTo","top","body","scrollHeight","behavior","length","message","ReactDOM","render"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,yBAAyB,mD,mBCAzGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,oHCS3B,IACeC,EADH,CAAEC,YAVd,SAAqBC,EAAMC,GACzB,OAAOC,MAAM,8BAAD,OACoBF,EADpB,iBACiCC,EADjC,kHAEVE,MAAK,SAACC,GACN,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,uCAA0CT,U,iDCHrD,SAASU,IACtB,OACE,qBAAKC,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CAAQC,KAAK,SAASC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,O,oBCH1CC,E,4MACnBC,MAAQ,CACNC,UAAW,I,EAEbC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEH,UAAWE,EAAEE,cAAcC,MAAMC,iB,EAEnDC,aAAe,SAACL,GAEd,GADAA,EAAEM,iBACkC,KAAhC,EAAKT,MAAMC,UAAUS,OACvB,OAAOC,IAAMC,MAAM,4BAErB,EAAKC,MAAMC,SAAS,EAAKd,MAAMC,WAC/B,EAAKG,SAAS,CAAEH,UAAW,M,4CAG7B,WACE,OACE,wBAAQT,UAAWC,IAAEsB,UAArB,SACE,uBAAMvB,UAAWC,IAAEuB,WAAYF,SAAUG,KAAKT,aAA9C,UACE,wBAAQb,KAAK,SAASH,UAAWC,IAAEyB,iBAAnC,SACE,sBAAM1B,UAAWC,IAAE0B,0BAGrB,uBACEC,SAAUH,KAAKf,iBACfV,UAAWC,IAAE4B,gBACb1B,KAAK,OACLW,MAAOW,KAAKjB,MAAMC,UAClBqB,YAAY,sC,GA7BeC,a,iBCAxB,SAASC,EAAT,GAA8D,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAC7D,OACE,oBAAIC,QAASD,EAAWnC,UAAWC,IAAE+B,iBAArC,SACE,qBAAKK,IAAKJ,EAAcK,IAAKJ,EAAMlC,UAAWC,IAAEsC,0B,qBCYvCC,EAfM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQN,EAAgB,EAAhBA,UAC9B,OACE,oBAAInC,UAAWC,IAAEuC,aAAjB,SACGC,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMU,EAA3B,EAA2BA,cAA3B,OACV,cAACZ,EAAD,CAEEE,KAAMA,EACND,aAAcA,EACdE,UAAW,kBAAMA,EAAUS,EAAeV,KAHrCS,S,iBCLA,SAASE,EAAT,GAA8B,IAAZT,EAAW,EAAXA,QAC/B,OACE,wBAAQjC,KAAK,SAASiC,QAASA,EAASpC,UAAWC,IAAE4C,OAArD,uB,qBCAEC,EAAYC,SAASC,cAAc,eAEnBC,E,4MAWlBC,cAAgB,SAAAvC,GACG,WAAXA,EAAEwC,MAEF,EAAK9B,MAAM+B,W,EAKnBC,oBAAsB,SAAA1C,GAClB2C,QAAQC,IAAI,YACZD,QAAQC,IAAI,iBAAkB5C,EAAEE,eAChCyC,QAAQC,IAAI,UAAW5C,EAAE6C,QAErB7C,EAAEE,gBAAkBF,EAAE6C,QACtB,EAAKnC,MAAM+B,W,uDAvBnB,WACIE,QAAQC,IAAI,2BACZE,OAAOC,iBAAiB,UAAWjC,KAAKyB,iB,kCAE5C,WACII,QAAQC,IAAI,8BACZE,OAAOE,oBAAoB,UAAWlC,KAAKyB,iB,oBAuB/C,WACM,IAAQU,EAAUnC,KAAKJ,MAAfuC,MACV,OAAOC,uBACH,qBAAK7D,UAAWC,IAAE6D,QAAS1B,QAASX,KAAK4B,oBAAzC,SACI,sBAAKrD,UAAWC,IAAE8D,MAAlB,UACI,qBAAK1B,IAAKuB,EAAMvB,IAAKC,IAAKsB,EAAMtB,MAAQb,KAAKJ,MAAM2C,cAG3DlB,O,GAvCwBf,a,gBCGfkC,E,4MACnBzD,MAAQ,CACNC,UAAW,GACXnB,KAAM,EACNmD,OAAQ,GACRyB,aAAa,EACbC,cAAe,KACfC,OAAQ,OACRhD,MAAO,M,EA2BTiD,WAAa,WACX,EAAKzD,SAAS,CACZH,UAAW,GACXnB,KAAM,EACNmD,OAAQ,GACR0B,cAAe,KACfC,OAAQ,U,EAIZE,iBAAmB,SAAC7D,GAClB,EAAK4D,aACL,EAAKzD,SAAS,CAAEH,e,EAGlB0B,UAAY,SAACE,EAAKC,GAChB,EAAK1B,SAAS,CACZsD,aAAa,EACbC,cAAe,CAAE9B,MAAKC,U,EAI1BiC,WAAa,kBAAM,EAAK3D,SAAS,CAAEsD,aAAa,K,EAEhDM,WAAa,WACX,EAAK5D,UAAS,SAAC6D,GAAD,MAAgB,CAAEnF,KAAMmF,EAAUnF,KAAO,O,wDAjDzD,SAAmBoF,EAAWD,GAAY,IAAD,OACvC,EAA4BhD,KAAKjB,MAAzBC,EAAR,EAAQA,UAAWnB,EAAnB,EAAmBA,KACfmF,EAAUhE,YAAcA,GAAagE,EAAUnF,OAASA,IAC1DmC,KAAKb,SAAS,CAAEwD,OAAQ,YAExBjF,EACGC,YAAYqB,EAAWnB,GACvBE,MAAK,SAACmF,GAAD,OAAUA,EAAKC,QACpBpF,MAAK,SAACqF,GAAD,OACJ,EAAKjE,UAAS,SAAC6D,GAAD,MAAgB,CAC5BhC,OAAO,GAAD,mBAAMgC,EAAUhC,QAAhB,YAA2BoC,IACjCT,OAAQ,kBAGXU,OAAM,SAAC1D,GAAD,OAAW,EAAKR,SAAS,CAAEQ,QAAOgD,OAAQ,iBAEjDK,EAAUhC,SAAWhB,KAAKjB,MAAMiC,QAClCgB,OAAOsB,SAAS,CACdC,IAAKjC,SAASkC,KAAKC,aACnBC,SAAU,a,oBAiChB,WACE,MAA8D1D,KAAKjB,MAA3DiC,EAAR,EAAQA,OAAQrB,EAAhB,EAAgBA,MAAOgD,EAAvB,EAAuBA,OAAQD,EAA/B,EAA+BA,cAAeD,EAA9C,EAA8CA,YAE9C,MAAe,SAAXE,EAEA,qBAAKpE,UAAWC,IAAEgE,IAAlB,SACE,cAAC,EAAD,CAAW3C,SAAUG,KAAK6C,qBAIjB,YAAXF,EAEA,sBAAKpE,UAAWC,IAAEgE,IAAlB,UACE,cAAC,EAAD,CAAW3C,SAAUG,KAAK6C,mBAC1B,cAAC,EAAD,CAAcnC,UAAWV,KAAKU,UAAWM,OAAQA,IACjD,cAAC1C,EAAD,IACC0C,EAAO2C,OAAS,GAAK,cAACvC,EAAD,CAAQT,QAASX,KAAK+C,gBAInC,aAAXJ,EAEA,sBAAKpE,UAAWC,IAAEgE,IAAlB,UACE,cAAC,EAAD,CAAW3C,SAAUG,KAAK6C,mBAC1B,6BAAKlD,EAAMiE,aAIF,aAAXjB,EAEA,sBAAKpE,UAAWC,IAAEgE,IAAlB,UACE,cAAC,EAAD,CAAW3C,SAAUG,KAAK6C,mBAC1B,cAAC,EAAD,CAAcnC,UAAWV,KAAKU,UAAWM,OAAQA,IAChDA,EAAO2C,OAAS,GAAK,cAACvC,EAAD,CAAQT,QAASX,KAAK+C,aAC3CN,GACC,cAAC,EAAD,CAAON,MAAOO,EAAef,QAAS3B,KAAK8C,aAE7C,cAAC,IAAD,YATN,M,GA3F6BxC,aCPjCuD,IAASC,OAAO,cAAC,EAAD,IAASxC,SAASC,cAAc,W,kBCHhD/D,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,kBCAhPD,EAAOC,QAAU,CAAC,IAAM,oB","file":"static/js/main.6b9314a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1C-z-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","function fetchImages(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=22561247-42ee984dc1f8b66c15ccf3de0&q=yellow+flowers&image_type=photo &orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There is no images with name ${name}`));\n  });\n}\nconst api = { fetchImages };\nexport default api;\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport s from \"../Loader/Loader.module.css\";\n\nexport default function LoaderSpiner() {\n  return (\n    <div className={s.Loader}>\n      <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport s from \"./SearchBar.module.css\";\n\nexport default class SearchBar extends Component {\n  state = {\n    imageName: \"\",\n  };\n  handleNameChange = (e) => {\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.imageName.trim() === \"\") {\n      return toast.error(\"Enter valid name,please!\");\n    }\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: \"\" });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}></span>\n          </button>\n\n          <input\n            onChange={this.handleNameChange}\n            className={s.SearchFormInput}\n            type=\"text\"\n            value={this.state.imageName}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport s from \"../ImageGalleryItem/ImageGalleryItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({ webformatURL, tags, openModal }) {\n  return (\n    <li onClick={openModal} className={s.ImageGalleryItem}>\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport s from \"./ImageGallery.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ images, openModal }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          tags={tags}\n          webformatURL={webformatURL}\n          openModal={() => openModal(largeImageURL, tags)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick} className={s.Button}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { CreatePortal } from 'react-dom';\nimport s from './Modal.module.css';\n\n\n\nconst modalRoot = document.querySelector('#modal-root')\n\nexport default class  Modal extends Component  {\n    \n    componentDidMount() {\n        console.log('Modal componentDidMount');\n        window.addEventListener('keydown', this.handleKeyDown)\n    }\n    componentWillUnmount() {\n        console.log('Modal componentWillUnmount')\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = e => {\n        if (e.code === 'Escape') {\n\n            this.props.onClose();\n        }\n    };\n\n\n    handleBackdropClick = e => {\n        console.log('backdrop');\n        console.log('currentTarget:', e.currentTarget);\n        console.log('target:', e.target);\n        \n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n}\n\n\n\n    render() {\n          const { image } = this.props;\n        return CreatePortal(\n            <div className={s.overlay} onClick={this.handleBackdropClick}>\n                <div className={s.modal}>\n                    <img src={image.src} alt={image.alt} />{this.props.children}\n                </div>\n            </div>,\n            modalRoot);\n}\n   \n}","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport api from \"../../services/imageApi\";\nimport LoaderSpiner from \"../Loader/Loader\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Button from \"../Button/Button\";\nimport Modal from \"../Modal/Modal\";\nimport s from '../App/App.module.css';\n\nexport default class App extends Component {\n  state = {\n    imageName: \"\",\n    page: 1,\n    images: [],\n    modalIsOpen: false,\n    selectedImage: null,\n    status: \"idle\",\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { imageName, page } = this.state;\n    if (prevState.imageName !== imageName || prevState.page !== page) {\n      this.setState({ status: \"pending\" });\n\n      api\n        .fetchImages(imageName, page)\n        .then((data) => data.hits)\n        .then((pictures) =>\n          this.setState((prevState) => ({\n            images: [...prevState.images, ...pictures],\n            status: \"resolved\",\n          }))\n        )\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\n    }\n    if (prevState.images !== this.state.images) {\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  resetState = () => {\n    this.setState({\n      imageName: \"\",\n      page: 1,\n      images: [],\n      selectedImage: null,\n      status: \"idle\",\n    });\n  };\n\n  handleFormSubmit = (imageName) => {\n    this.resetState();\n    this.setState({ imageName });\n  };\n\n  openModal = (src, alt) => {\n    this.setState({\n      modalIsOpen: true,\n      selectedImage: { src, alt },\n    });\n  };\n\n  closeModal = () => this.setState({ modalIsOpen: false });\n\n  onLoadMore = () => {\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n  };\n\n  render() {\n    const { images, error, status, selectedImage, modalIsOpen } = this.state;\n\n    if (status === \"idle\") {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n        </div>\n      );\n    }\n    if (status === \"pending\") {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <ImageGallery openModal={this.openModal} images={images} />\n          <LoaderSpiner />\n          {images.length > 0 && <Button onClick={this.onLoadMore} />}\n        </div>\n      );\n    }\n    if (status === \"rejected\") {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <h1>{error.message}</h1>\n        </div>\n      );\n    }\n    if (status === \"resolved\") {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <ImageGallery openModal={this.openModal} images={images} />\n          {images.length > 0 && <Button onClick={this.onLoadMore} />}\n          {modalIsOpen && (\n            <Modal image={selectedImage} onClose={this.closeModal} />\n          )}\n          <ToastContainer />\n        </div>\n      );\n    }\n  }\n};\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"../src/components/App/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__19WMJ\",\"SearchForm\":\"SearchBar_SearchForm__1k1JW\",\"SearchFormButton\":\"SearchBar_SearchFormButton__3W9N5\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__2bY4N\",\"SearchFormInput\":\"SearchBar_SearchFormInput__17jtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\"};"],"sourceRoot":""}